# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool: Default

variables:
  solution: '**/DogStore/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloudDS'
    organization: '210503-reston-net'
    scannerMode: 'MSBuild'
    projectKey: '210503-Reston-NET_Fanner-Alex-P1'
    projectName: 'Fanner-Alex-P1'
#restore build and test DogStore
- task: DotNetCoreCLI@2
  displayName: Restore project deps
  inputs:
    command: 'restore'
    projects: $(solution)
    feedsToUse: 'select'
- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: 'build'
    projects: $(solution)
    arguments: --configuration $(buildConfiguration) --collect "Code Coverage"
- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '**/cobertura/coverage.xml'
- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: 'test'
    projects: '**/DogStore/DSTests/*.csproj'
- task: SonarCloudAnalyze@1
  displayName: Run Code Analysis
- task: SonarCloudPublish@1
  displayName: Publish Code Analysis
- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
      command: 'publish'
      publishWebProjects: true
      zipAfterPublish: true
      projects: '**/DogStore/DSWebUI/*.csproj'
- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Azure subscription 1(3)(1242d5c7-efbf-4f0f-9ffc-2680ffc76b25)'
    appType: 'webApp'
    WebAppName: 'FannerDogs'
    packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'
